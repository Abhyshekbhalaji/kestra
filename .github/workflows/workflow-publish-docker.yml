name: Publish - Docker

on:
  workflow_dispatch:
    inputs:
      plugin-version:
        description: "Kestra version"
        default: 'LATEST'
        required: false
        type: string
      force-download-artifact:
        description: 'Force download artifact'
        required: false
        type: string
        default: "true"
  workflow_call:
    inputs:
      plugin-version:
        description: "Kestra version"
        default: 'LATEST'
        required: false
        type: string
      force-download-artifact:
        description: 'Force download artifact'
        required: false
        type: string
        default: "true"
    secrets:
      DOCKERHUB_USERNAME:
        description: "The Dockerhub username."
        required: true
      DOCKERHUB_PASSWORD:
        description: "The Dockerhub password."
        required: true

jobs:
  # ********************************************************************************************************************
  # Build
  # ********************************************************************************************************************
  build-artifacts:
    name: Build Artifacts
    if: ${{ github.event.inputs.force-download-artifact == 'true' }}
    uses: ./.github/workflows/workflow-build-artifacts.yml
  # ********************************************************************************************************************
  # Docker
  # ********************************************************************************************************************
  publish:
    name: Publish - Docker
    runs-on: ubuntu-latest
    needs: build-artifacts
    if: |
      always() &&
      (needs.build-artifacts.result == 'success' ||
        github.event.inputs.force-download-artifact != 'true')
    env:
      PLUGIN_VERSION: ${{ github.event.inputs.plugin-version != null && github.event.inputs.plugin-version || 'LATEST' }}
    strategy:
      matrix:
        image:
          - tag: -no-plugins
            packages: jattach
            plugins: false
            python-libraries: ""

          - tag: ""
            plugins: true
            packages: python3 python3-venv python-is-python3 python3-pip nodejs npm curl zip unzip jattach
            python-libraries: kestra
    steps:
      - name: Checkout - Current ref
        uses: actions/checkout@v4

      # Docker setup
      - name: Docker - Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Docker - Fix Qemu
        shell: bash
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes -c yes

      - name: Docker - Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Docker Login
      - name: Docker - Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}


#     # Get Plugins List
      - name: Plugins - Get List
        uses: ./.github/actions/plugins-list
        id: plugins-list
        if: ${{ matrix.image.plugins}}
        with:
          plugin-version: ${{ env.PLUGIN_VERSION }}

      # Vars
      - name: Docker - Set variables
        shell: bash
        id: vars
        run: |
          TAG=${GITHUB_REF#refs/*/}
          PLUGINS="${{ matrix.image.plugins == true && steps.plugins-list.outputs.plugins || '' }}"
          if [[ $TAG == v* ]]; then
            TAG="${TAG}";
            echo "plugins=${{ matrix.image.plugins }}" >> $GITHUB_OUTPUT
          elif [[ $TAG = "develop" ]]; then
            TAG="develop";
            echo "plugins=--repositories=https://central.sonatype.com/repository/maven-snapshots/ $PLUGINS" >> $GITHUB_OUTPUT
          else
            TAG="build-${{ github.run_id }}";
            echo "plugins=--repositories=https://central.sonatype.com/repository/maven-snapshots/ $PLUGINS" >> $GITHUB_OUTPUT
          fi

          echo "tag=${TAG}${{ matrix.image.tag }}" >> $GITHUB_OUTPUT

      # Build Docker Image
      - name: Artifacts - Download executable
        uses: actions/download-artifact@v5
        with:
          name: exe
          path: build/executable

      - name: Docker - Copy exe to image
        shell: bash
        run: |
          cp build/executable/* docker/app/kestra && chmod +x docker/app/kestra

      # Docker Build and push
      - name: Docker - Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: kestra/kestra:${{ steps.vars.outputs.tag }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            KESTRA_PLUGINS=${{ steps.vars.outputs.plugins }}
            APT_PACKAGES=${{ matrix.image.packages }}
            PYTHON_LIBRARIES=${{ matrix.image.python-libraries }}
