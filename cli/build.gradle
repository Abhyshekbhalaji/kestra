configurations {
    implementation.extendsFrom(micronaut)
}
dependencies {
    // micronaut
    implementation "info.picocli:picocli"
    implementation "io.micronaut.picocli:micronaut-picocli"
    implementation "io.micronaut:micronaut-management"
    implementation "io.micronaut:micronaut-http-server-netty"

    // logs
    implementation 'ch.qos.logback.contrib:logback-json-classic'
    implementation 'ch.qos.logback.contrib:logback-jackson'

    // OTLP metrics
    implementation "io.micronaut.micrometer:micronaut-micrometer-registry-otlp"

    // aether still use javax.inject
    compileOnly 'javax.inject:javax.inject:1'

    // modules
    implementation project(":core")
    implementation project(":script")

    implementation project(":repository-memory")

    implementation project(":runner-memory")

    implementation project(":jdbc")
    implementation project(":jdbc-h2")
    implementation project(":jdbc-mysql")
    implementation project(":jdbc-postgres")

    implementation project(":storage-local")

    implementation project(":webserver")

    //test
    testImplementation "org.wiremock:wiremock-jetty12"
}

//Need to be disable to allow publishing an artifact with different name than project.name (here rootProject.name)
tasks.withType(GenerateModuleMetadata).configureEach {
    enabled = false
}

afterEvaluate {
    components.remove(components.findByName("java"))
    publishing {
        publications {
            withType(MavenPublication).configureEach { publication ->
                publication.artifacts.clear()

                // Use the shadow jar
                publication.artifact(rootProject.tasks.named("shadowJar").get()) {
                    extension = "jar"
                }

                // Add the executable zip
                publication.artifact(rootProject.tasks.named("executableJar").get().archiveFile) {
                    classifier = "exec"
                    extension = "zip"
                }
            }
        }
    }
}